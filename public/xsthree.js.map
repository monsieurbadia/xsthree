{"version":3,"file":"xsthree.js","sources":["../graphics/xsthree/src/runtime/math/wasmatrix/base.js","../graphics/xsthree/src/runtime/math/wasmatrix/mat4.js","../graphics/xsthree/src/runtime/math/mat4.js","../graphics/xsthree/src/runtime/util/flatten.js","../graphics/xsthree/src/runtime/util/identity.js","../graphics/xsthree/src/runtime/util/is.js","../graphics/xsthree/src/runtime/util/lazy.js","../graphics/xsthree/src/runtime/util/pipe.js","../graphics/xsthree/src/runtime/util/box.js","../graphics/xsthree/src/runtime/util/left.js","../graphics/xsthree/src/runtime/util/right.js","../graphics/xsthree/src/runtime/math/wasmatrix/vec3.js","../graphics/xsthree/src/runtime/math/vec3.js","../graphics/xsthree/src/runtime/core/renderable.js","../graphics/xsthree/src/runtime/core/camera.js","../graphics/xsthree/src/runtime/core/geometry.js","../graphics/xsthree/src/runtime/core/material.js","../graphics/xsthree/src/runtime/core/mesh.js","../graphics/xsthree/src/runtime/math/wasmatrix/vec2.js","../graphics/xsthree/src/runtime/math/vec2.js","../graphics/xsthree/src/runtime/core/mouse.js","../graphics/xsthree/src/runtime/core/renderer.js","../graphics/xsthree/src/runtime/core/scene.js","../graphics/xsthree/src/runtime/core/texture.js","../graphics/xsthree/src/runtime/object/cube.js","../graphics/xsthree/src/runtime/object/plane.js","../graphics/xsthree/src/runtime/object/triangle.js","../graphics/xsthree/src/runtime/object/tetrahedron.js","../graphics/xsthree/src/runtime/math/color.js","../graphics/xsthree/src/runtime/math/position.js","../graphics/xsthree/src/runtime/math/wasmatrix/vec4.js","../graphics/xsthree/src/runtime/math/vec4.js","../graphics/xsthree/src/runtime/lib.mjs"],"sourcesContent":["export const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n","import { ARRAY_TYPE, EPSILON } from './base';\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new ARRAY_TYPE(16);\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy( out, a ) {\n\n  out[ 0 ] = a[ 0 ];\n  out[ 1 ] = a[ 1 ];\n  out[ 2 ] = a[ 2 ];\n  out[ 3 ] = a[ 3 ];\n  out[ 4 ] = a[ 4 ];\n  out[ 5 ] = a[ 5 ];\n  out[ 6 ] = a[ 6 ];\n  out[ 7 ] = a[ 7 ];\n  out[ 8 ] = a[ 8 ];\n  out[ 9 ] = a[ 9 ];\n  out[ 10 ] = a[ 10 ];\n  out[ 11 ] = a[ 11 ];\n  out[ 12 ] = a[ 12 ];\n  out[ 13 ] = a[ 13 ];\n  out[ 14 ] = a[ 14 ];\n  out[ 15 ] = a[ 15 ];\n\n  return out;\n\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  let a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  let a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  let a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n\n  let b0 = a00 * a11 - a01 * a10;\n  let b1 = a00 * a12 - a02 * a10;\n  let b2 = a01 * a12 - a02 * a11;\n  let b3 = a20 * a31 - a21 * a30;\n  let b4 = a20 * a32 - a22 * a30;\n  let b5 = a21 * a32 - a22 * a31;\n  let b6 = a00 * b5 - a01 * b4 + a02 * b3;\n  let b7 = a10 * b5 - a11 * b4 + a12 * b3;\n  let b8 = a20 * b2 - a21 * b1 + a22 * b0;\n  let b9 = a30 * b2 - a31 * b1 + a32 * b0;\n\n  // Calculate the determinant\n  return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  let a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  let a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  let a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det =\n    b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (\n    Math.abs(eyex - centerx) < EPSILON &&\n    Math.abs(eyey - centery) < EPSILON &&\n    Math.abs(eyez - centerz) < EPSILON\n  ) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.hypot(y0, y1, y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  let a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  let a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  let a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2),\n    nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0],\n    y = axis[1],\n    z = axis[2];\n  let len = Math.hypot(x, y, z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0],\n    y = v[1],\n    z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0],\n    y = v[1],\n    z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n    let a12 = a[6],\n      a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n","import * as mat4 from './wasmatrix/mat4';\n\nexport const mat4fn = () => {\n  const me = {\n    value: mat4.create(),\n  };\n\n  return {\n    ...me,\n    identity () {\n      mat4.identity(me.value);\n      return me;\n    },\n    invert(a) {\n      mat4.invert(me.value, a);\n      return me;\n    },\n    lookAt(eye, center, up) {\n      mat4.lookAt(me.value, eye, center, up);\n      return me;\n    },\n    rotate(m, rad, axis) {\n      mat4.rotate(me.value, m, rad, axis);\n      return me;\n    },\n    rotateX(m, angle) {\n      mat4.rotateX(me.value, m, angle);\n      return me;\n    },\n    rotateY(m, angle) {\n      mat4.rotateY(me.value, m, angle);\n      return me;\n    },\n    scale(m, v) {\n      mat4.scale(me.value, m, typeof v === 'number' ? [ v, v, v ] : v);\n      return me;\n    },\n    set(\n      m00, m01, m02, m03,\n      m10, m11, m12, m13,\n      m20, m21, m22, m23,\n      m30, m31, m32, m33,\n    ) {\n      mat4.set(\n        me.value,\n        m00, m01, m02, m03,\n        m10, m11, m12, m13,\n        m20, m21, m22, m23,\n        m30, m31, m32, m33,\n      );\n  \n      return me;\n    },\n    toOrthogonal({left, right, bottom, top, near, far} = {}) {\n      mat4.ortho(me.value, left, right, bottom, top, near, far);\n      return me;\n    },\n    toPerspective({fov, aspect, near, far} = {}) {\n      mat4.perspective(me.value, fov, aspect, near, far);\n      return me;\n    },\n    transpose(a) {\n      mat4.set(me.value, a);\n      return me;\n    },\n    translate(m, v) {\n      mat4.translate(me.value, m, v);\n      return me;\n    },\n  };\n};\n","export const flatten = x => x.map ? [].concat(...x.map(flatten)) : x;\n","export const identity = x => x;\nexport const noop = x => x;\n","export const is = Object.freeze({\n  pow2: x => (x & (x - 1 )) == 0,\n});\n","// a naive way to lazy load things\nexport const lazyfn = (payload) => _ => (payload);\n","export const pipe = (...fs) => arg => (\n  fs.reduce((res, payloadfn) => (\n    res.then(x => payloadfn(x, arg)), Promise.resolve(arg))\n  )\n);\n","export const Box = x => ({\n  map: f => Box(f(x)),\n  fold: f => f(x),\n});\n","export const Left = x => ({\n  map: f => Left(x),\n  fold: (f, g) => f(x),\n});\n","export const Right = x => ({\n  map: f => Right(f(x)),\n  fold: (f, g) => g(x),\n});\n","import { ARRAY_TYPE } from './base';\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new ARRAY_TYPE(3);\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.hypot(x, y, z);\n}\n\nexport function fromValues(x, y, z) {\n  let out = new ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, rad) {\n  let p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, rad) {\n  let p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, rad) {\n  let p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n","import * as vec3 from './wasmatrix/vec3';\n\nexport const vec3fn = (x = 0, y = x, z = x) => ({\n  value: vec3.fromValues(x, y, z),\n  from(x = 0, y = x, z = x) {\n    const value = vec3.set(this.value, x, y, z);\n    return {...this, value};\n  },\n});\n","import {mat4fn} from '../math/mat4';\nimport {vec3fn} from '../math/vec3';\n\nexport const renderable = () => ({\n  matrix: mat4fn(),\n  worldMatrix: mat4fn(),\n  position: vec3fn(),\n  rotation: vec3fn(),\n  scale: vec3fn(1),\n});\n","import { mat4fn } from '../math/mat4';\nimport { Box } from '../util';\nimport { renderable } from './renderable';\n\nexport const camerafn = (params) => (\n  Box(camera(params))\n);\n\nconst camera = (\n  {fov, aspect, near, far, left, right, bottom, top} = {}\n) => ({\n  ...renderable(),\n  fov: fov || 45,\n  aspect: aspect || 1,\n  near: near || 1e-2,\n  far: far || 1e4,\n  left: left || null,\n  right: right || null,\n  bottom: bottom || 0,\n  top: top || 0,\n  isCamera: true,\n  kind: (left || right) ? \"orthogonal\" : \"perspective\",\n  modelViewMatrix: mat4fn(),\n  normalMatrix: mat4fn(),\n  projectionMatrix: mat4fn(),\n  perspective(fov, aspect, near, far) {\n    this.projectionMatrix.persp({fov, aspect, near, far});\n    return Object.assign(this, {fov, aspect, near, far});\n  },\n  orthogonal(left, right, bottom, top, near, far) {\n    this.projectionMatrix.orhto({left, right, bottom, top, near, far});\n    return Object.assign(this, {left, right, bottom, top, near, far});\n  },\n});\n","export const geometryfn = () => geometry();\n\nconst geometry = () => ({\n  attributes: {},\n  faces: [],\n  uvs: [],\n  vertices: [],\n});\n","export const materialfn = (params) => () => (\n  Box(material(params))\n);\n\nconst material = ({color}) => ({\n  color,\n  isMaterial: true,\n});\n\nfunction shader(params) {\n  return;\n}\n\nfunction normal(params) {\n  return;\n}\n","import {Box} from '../util';\nimport {renderable} from './renderable';\n\nexport const meshfn = (geometry, material) => (\n  Box(mesh({geometry, material}))\n);\n\nconst mesh = ({geometry, material}) => ({\n  ...renderable(),\n  geometry,\n  material,\n});\n","import { ARRAY_TYPE } from './base';\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}","import * as vec2 from './wasmatrix/vec2';\n\nexport const vec2fn = (x = 0, y = x) => ({\n  value: vec2.fromValues(x, y),\n  from(x = 0, y = x) {\n    const value = vec2.set(this.value, x, y);\n    return {...this, value};\n  },\n});\n","import {vec2fn} from '../math/vec2';\n\nexport const mousefn = (x, y, surface) => {\n  mouse({x, y, surface})\n};\n\nconst mouse = ({x, y, surface}) => ({\n  AMORTIZATION: 0.95,\n  THETA: 0,\n  PHI: 0,\n  drag: false,\n  enable: false,\n  surface,\n  direction: vec2fn(),\n  position: vec2fn(x, y),\n  lastPosition: vec2fn(),\n  onmousedown({pageX, pageY, preventDefault}) {\n    this.drag = true;\n    this.lastPosition.x = pageX;\n    this.lastPosition.y = pageY;\n\n    preventDefault();\n\n    return false;\n  },\n  onmousemove({pageX, pageY, preventDefault}) {\n    if (!this.drag) return false;\n\n    if (this.enable) {\n      this.direction.x =\n        (pageX - this.lastPosition.x) * 2 * Math.PI / this.canvas.offsetWidth;\n\n      this.direction.y =\n        (pageY - this.lastPosition.y) * 2 * Math.PI / this.canvas.offsetHeight;\n\n      this.THETA += this.direction.x;\n      this.PHI += this.direction.y;\n      this.lastPosition.x = pageX;\n      this.lastPosition.y = pageY;\n    }\n\n    preventDefault();\n  },\n  onmouseup({preventDefault}) {\n    this.drag = false;\n\n    preventDefault();\n  },\n  render() {\n    if (this.enable && !this.drag) {\n      this.direction.x *= this.AMORTIZATION;\n      this.direction.y *= this.AMORTIZATION;\n      this.THETA += this.direction.x;\n      this.PHI += this.direction.y;\n    }\n  },\n});\n","import fsShader from './glsl/shader.fs';\nimport vsShader from './glsl/shader.vs';\nimport {mousefn} from './mouse';\nimport {lazyfn, Box} from '../util';\n\nlet AMORTIZATION = 0.95;\nlet THETA = 0;\nlet PHI = 0;\n\nexport const rendererfn = (params) => (\n  Box(renderer(params))\n);\n\nexport const framefn = (scene, camera, payloadfn) => (\n  cur => {\n    cur.framefn = lazyfn({scene, camera, payloadfn});\n    return cur;\n  }\n);\n\nconst renderer = ({\n  alpha = false,\n  antialias = true,\n  autoClear = true,\n  canvas = document.createElement('canvas'),\n  width = 200,\n  height = 200,\n  dpr = window.devicePixelRatio,\n}) => ({\n  dpr,\n  width,\n  height,\n  gl: canvas.getContext('experimental-webgl', {\n    alpha,\n    antialias,\n    failIfMajorPerformanceCaveat: true,\n    powerPreference: 'default',\n    preserveDrawingBuffer: false,\n  }),\n  program: {},\n  canvas: canvas || document.createElement(\"canvas\"),\n  renderering: false,\n  lostingContext: false,\n  framefn: () => {},\n  oncontextmenu({preventDefault}) {\n    this.lostingContext = true;\n    preventDefault();\n  },\n  oncontextrestore(_) {\n    this.lostingContext = false;\n    this.start();\n  },\n  resize() {\n    this.setSize();\n    this.clear();\n\n    return this;\n  },\n  setSize({width = 200, height = 200} = {}) {\n    this.canvas.width = width * this.dpr;\n    this.canvas.height = height * this.dpr;\n\n    this.setViewportSize();\n\n    Object.assign(this.canvas.style, {\n      width: `${width}px`,\n      height: `${height}px`,\n    });\n\n    return this;\n  },\n  setViewportSize({width = 200, height = 200} = {}) {\n    this.gl.viewport(0, 0, width, height);\n\n    return this;\n  },\n  async start() {\n    this.setup();\n    this.frame();\n    this.resize();\n  },\n  async setup() {\n    this.program = mkprogram(this.gl);\n\n    this.gl.enable(this.gl.DEPTH_TEST);\n    this.gl.depthFunc(this.gl.LEQUAL); \n\n    this.rendering = true;\n    let t = performance.now();\n\n    if (performance.now() - t > 10) {\n      t = await this.nextFrame();\n    }\n\n    this.renderering = false;\n  },\n  async frame() {\n    const {scene, camera, payloadfn} = this.framefn();\n\n    do {\n      payloadfn(this.render({scene, camera}));\n      // console.log(\"1\");\n      await this.nextFrame();\n    } while (this.rendering);\n  },\n  render({scene, camera}) {\n    let object;\n\n    if (this.lostingContext) return;\n\n    for (let i = 0; i < scene.children.length; i++) {\n      object = scene.children[i];\n\n      if (object) {\n        if (!object.positionBuf) object.positionBuf = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, object.positionBuf);\n        \n        this.gl.bufferData(\n          this.gl.ARRAY_BUFFER,\n          new Float32Array(object.vertices),\n          this.gl.STATIC_DRAW,\n        );\n\n        if (!object.__colorBuf) object.__colorBuf = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, object.__colorBuf);\n\n        this.gl.bufferData(\n          this.gl.ARRAY_BUFFER,\n          new Float32Array(object.colors),\n          this.gl.STATIC_DRAW,\n        );\n\n        if (object.normals.length > 0) {\n          if (!object.__normalBuf) object.__normalBuf = this.gl.createBuffer();\n          this.gl.bindBuffer(this.gl.ARRAY_BUFFER, object.__normalBuf);\n\n          this.gl.bufferData(\n            this.gl.ARRAY_BUFFER,\n            new Float32Array(object.normals),\n            this.gl.STATIC_DRAW,\n          );\n        }\n\n        if (!object.__indexBuf) object.__indexBuf = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, object.__indexBuf);\n\n        this.gl.bufferData(\n          this.gl.ELEMENT_ARRAY_BUFFER,\n          new Uint16Array(object.indices),\n          this.gl.STATIC_DRAW,\n        );\n\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, object.__indexBuf);\n\n        this.matrices({object, camera});\n  \n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, object.positionBuf);\n\n        this.gl.vertexAttribPointer(\n          this.program.position, 3, this.gl.FLOAT, false, 0, 0,\n        );\n\n        this.gl.enableVertexAttribArray(this.program.position);\n  \n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, object.__colorBuf);\n\n        this.gl.vertexAttribPointer(\n          this.program.color, 4, this.gl.FLOAT, false, 0, 0,\n        );\n\n        this.gl.enableVertexAttribArray(this.program.color);\n        \n        if (object.normals.length > 0) {\n          this.gl.bindBuffer(this.gl.ARRAY_BUFFER, object.__normalBuf);\n\n          this.gl.vertexAttribPointer(\n            this.program.normal, 3, this.gl.FLOAT,false, 0, 0\n          );\n\n          this.gl.enableVertexAttribArray(this.program.normal);\n        }\n\n        this.gl.uniformMatrix4fv(\n          this.program.modelViewMatrix,\n          false,\n          camera.modelViewMatrix.value,\n        );\n\n        this.gl.uniformMatrix4fv(\n          this.program.normalMatrix,\n          false,\n          camera.normalMatrix.value,\n        );\n\n        this.gl.uniformMatrix4fv(\n          this.program.projectionMatrix,\n          false,\n          camera.projectionMatrix.value,\n        );\n\n        this.gl.uniformMatrix4fv(\n          this.program.object3dMatrix,\n          false,\n          object.matrix.value,\n        );\n\n        this.gl.drawElements(\n          this.gl.TRIANGLES,\n          object.indices.length,\n          this.gl.UNSIGNED_SHORT,\n          0,\n        );\n\n        this.gl.flush();\n      }\n    }\n\n    this.radian += Math.PI / 180;\n\n    return this;\n  },\n  matrices({object, camera} = {}) {\n    switch(camera.kind) {\n      case \"persp\":\n        camera.persp({\n          fov: camera.fov,\n          aspect: camera.aspect,\n          near: camera.near,\n          far: camera.far\n        } );\n        break;\n      case \"ortho\":\n        camera.ortho({\n          left: camera.left,\n          right: camera.right,\n          bottom: camera.bottom,\n          top: camera.top,\n          near: camera.near,\n          far: camera.far\n        });\n        break;\n      default:\n        return;\n    }\n\n    camera.modelViewMatrix.identity();\n    \n    camera.modelViewMatrix.translate(\n      camera.modelViewMatrix.value,\n      camera.position.value,\n    );\n    \n    camera.modelViewMatrix.rotate(\n      camera.modelViewMatrix.value,\n      this.radian,\n      camera.rotation.value,\n    );\n\n    object.matrix.identity();\n    object.matrix.translate(object.matrix.value, object.position.value);\n    object.matrix.rotateX(object.matrix.value, PHI);\n    object.matrix.rotateY(object.matrix.value, THETA);\n  },\n  clear() {\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    this.gl.clearDepth(1.0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n  },\n  stop() {\n    this.rendering = false;\n  },\n  nextFrame() {\n    return new Promise(window.requestAnimationFrame);\n  },\n});\n\nfunction mkshader({gl, kind, source}) {\n  const shader = {\n    fragment: gl.createShader(gl.FRAGMENT_SHADER),\n    vertex: gl.createShader(gl.VERTEX_SHADER),\n  };\n\n  const s = shader[kind];\n\n  gl.shaderSource(s, source);\n  gl.compileShader(s);\n\n  if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n    console.log(gl.getShaderInfoLog(s));\n    return null;\n  }\n\n  return s;\n};\n\nfunction mkprogram(gl) {\n  const p = gl.createProgram();\n  const vertex = mkshader({gl, kind: \"vertex\", source: vsShader});\n  const fragment = mkshader({gl, kind: \"fragment\", source: fsShader});\n\n  gl.attachShader(p, vertex);\n  gl.attachShader(p, fragment);\n  gl.linkProgram(p);\n\n  if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n    const log = gl.getProgramInfoLog(p);\n    console.log(`could not initialise shader program, ${log}`);\n  }\n\n  gl.useProgram(p);\n\n  p.color = gl.getAttribLocation(p, 'color');\n  p.normal = gl.getAttribLocation(p, 'normal');\n  p.position = gl.getAttribLocation(p, 'position');\n\n  p.modelViewMatrix = gl.getUniformLocation(p, 'modelViewMatrix');\n  p.normalMatrix = gl.getUniformLocation(p, 'normalMatrix');\n  p.object3dMatrix = gl.getUniformLocation(p, 'object3dMatrix');\n  p.projectionMatrix = gl.getUniformLocation(p, 'projectionMatrix');\n  p.uSampler = gl.getUniformLocation(p, 'uSampler');\n\n  return p;\n}\n","export const scenefn = () => (scene());\n\nconst scene = () => ({\n  name: \"\",\n  isScene: true,\n  children: [],\n  add(child) {\n    const children = this.children.splice(this.children.length, 0, child);\n    return Object.create(this, {children});\n  },\n});\n","import { is } from \"../util/is\";\n\nexport const texturefn = () => texture();\n\nconst texture = () => ({\n  load({gl, src}) {\n    const texture = gl.createTexture();\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const width = 1;\n    const height = 1;\n    const border = 0;\n    const srcFormat = gl.RGBA;\n    const srcType = gl.UNSIGNED_BYTE;\n    const pixel = new Uint8Array([0, 0, 255, 255]);\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    \n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      level,\n      internalFormat,\n      width,\n      height,\n      border,\n      srcFormat,\n      srcType,\n      pixel,\n    );\n\n    const image = new Image();\n\n    image.onload = _ => {\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n  \n      if (is.pow2(image.width) && is.pow2(image.height)) {\n        gl.generateMipmap(gl.TEXTURE_2D);\n      } else {\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      }\n    };\n\n    image.src = src;\n\n    return texture;\n  },\n});\n","import { mat4fn } from '../math/mat4';\nimport { renderable } from '../core/renderable';\n\nexport const cubefn = ({color = [1.0, 0.5, 0.5, 0.0]} = {}) => {\n  return {\n    ...renderable(),\n    baseColors: [],\n    colors: [],\n    matrix: mat4fn(),\n    name: '',\n    textures: [\n      0.0,  0.0,\n      1.0,  0.0,\n      1.0,  1.0,\n      0.0,  1.0,\n\n      0.0,  0.0,\n      1.0,  0.0,\n      1.0,  1.0,\n      0.0,  1.0,\n\n      0.0,  0.0,\n      1.0,  0.0,\n      1.0,  1.0,\n      0.0,  1.0,\n\n      0.0,  0.0,\n      1.0,  0.0,\n      1.0,  1.0,\n      0.0,  1.0,\n\n      0.0,  0.0,\n      1.0,  0.0,\n      1.0,  1.0,\n      0.0,  1.0,\n\n      0.0,  0.0,\n      1.0,  0.0,\n      1.0,  1.0,\n      0.0,  1.0,\n    ],\n    normals: [\n      0.0,  0.0,  1.0,\n      0.0,  0.0,  1.0,\n      0.0,  0.0,  1.0,\n      0.0,  0.0,  1.0,\n\n      0.0,  0.0, -1.0,\n      0.0,  0.0, -1.0,\n      0.0,  0.0, -1.0,\n      0.0,  0.0, -1.0,\n\n      0.0,  1.0,  0.0,\n      0.0,  1.0,  0.0,\n      0.0,  1.0,  0.0,\n      0.0,  1.0,  0.0,\n\n      0.0, -1.0,  0.0,\n      0.0, -1.0,  0.0,\n      0.0, -1.0,  0.0,\n      0.0, -1.0,  0.0,\n\n      1.0,  0.0,  0.0,\n      1.0,  0.0,  0.0,\n      1.0,  0.0,  0.0,\n      1.0,  0.0,  0.0,\n\n      -1.0,  0.0,  0.0,\n      -1.0,  0.0,  0.0,\n      -1.0,  0.0,  0.0,\n      -1.0,  0.0,  0.0\n    ],\n    vertices: [ \n      -0.5, -0.5,  0.5,\n      0.5, -0.5,  0.5,\n      0.5,  0.5,  0.5,\n      -0.5,  0.5,  0.5,\n\n      -0.5, -0.5, -0.5,\n      0.5, -0.5, -0.5,\n      0.5,  0.5, -0.5,\n      -0.5,  0.5, -0.5,\n\n      0.5,  0.5,  0.5,\n      -0.5, 0.5,  0.5,\n      -0.5, 0.5, -0.5,\n      0.5,  0.5, -0.5,\n\n      -0.5, -0.5,  0.5,\n      0.5,  -0.5,  0.5,\n      0.5,  -0.5, -0.5,\n      -0.5, -0.5, -0.5,\n\n      0.5, -0.5,  0.5,\n      0.5,  0.5,  0.5,\n      0.5,  0.5, -0.5,\n      0.5, -0.5, -0.5,\n\n      -0.5, -0.5,  0.5,\n      -0.5,  0.5,  0.5,\n      -0.5,  0.5, -0.5,\n      -0.5, -0.5, -0.5 \n    ],\n    indices: [\n      0,  1,  2,  0,  2 , 3,\n      4,  5,  6,  4,  6 , 7,\n      8,  9, 10,  8, 10, 11,\n      12, 13, 14, 12, 14, 15,\n      16, 17, 18, 16, 18, 19,\n      20, 21, 22, 20, 22, 23\n    ],\n  }\n}\n","import {renderable} from '../core/renderable';\nimport {mat4fn} from '../math/mat4';\nimport {vec3fn} from '../math/vec3';\nimport {flatten} from '../util/flatten';\n\nexport const planefn = ({name = \"\", width = 1, height = 1} = {}) => {\n  const width_half = width / 2;\n  const height_half = height / 2;\n\n  return {\n    ...renderable(),\n    name,\n    width,\n    height,\n    colors: [\n      1.0, 0.0, 0.0, 1.0,\n      0.0, 1.0, 0.0, 1.0,\n      0.0, 0.0, 1.0, 1.0,\n      1.0, 1.0, 0.0, 1.0\n    ],\n    indices: [0, 1, 2, 1, 2, 3],\n    normals: [],\n    viewMatrix: mat4fn(),\n    vertices: [\n      vec3fn(-width_half,  height_half, 0).value,\n      vec3fn(width_half,  height_half, 0).value,\n      vec3fn(-width_half, -height_half, 0).value,\n      vec3fn(width_half, -height_half, 0).value,\n    ].flatMap(flatten),\n  };\n};\n","import {renderable} from '../core/renderable';\n\nexport const trianglefn = _ => ({\n  ...renderable(),\n  colors: [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0],\n  indices: [0, 1, 2],\n  normals: [],\n  positions: [0, 1, 0, 1, -1, 0, -1, -1, 0],\n  vertices: [0,  1, 0, 1, -1, 0, -1, -1, 0],\n});\n","import {renderable} from '../core/renderable';\nimport {mat4fn} from '../math/mat4';\n\nexport const tetrahedronfn = _ => ({\n  ...renderable(),\n  colors: [\n    1.0, 0.0, 0.0, 1.0,\n    0.0, 1.0, 0.0, 1.0,\n    0.0, 0.0, 1.0, 1.0,\n    1.0, 1.0, 0.0, 1.0,\n  ],\n  matrix: mat4fn(),\n  normals: [],\n  indices: [\n    0, 1, 2,\n    0, 1, 3,\n    1, 2, 3,\n    0, 2, 3,\n  ],\n  vertices: [\n    -1, -1, -1,  1, 0, 0,\n     1, -1, -1,  0, 1, 0,\n     0, -1,  1,  0, 0, 1,\n     0,  1,  0,  1, 1, 1,\n  ],\n});\n","export const colorfn = c => ({\n  value: colorfn.parse(c),\n  parse(color) {\n    const hex = Math.floor(color);\n\n    const c = [\n      (hex >> 16 & 255) / 255,\n      (hex >> 8 & 255) / 255,\n      (hex & 255) / 255,\n    ];\n\n    return {...this, value: c};\n  },\n});\n","export const posfn = ({x, y, z}) => ({\n  x, y, z,\n});\n\nexport const posfrom = (x, y, z) => (cur) => {\n  cur.position.from(x, y, z);\n  return cur;\n};\n","import { ARRAY_TYPE } from './base';\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0],\n    y = axis[1],\n    z = axis[2];\n  let len = Math.hypot(x, y, z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}","import * as vec4 from './wasmatrix/vec4';\n\nexport const vec4fn = (x = 0, y = x, z = x, w = x) => ({\n  value: vec4.fromValues(x, y, z, w),\n  from(x = 0, y = x, z = x, w = x) {\n    const value = vec4.set(this.value, x, y, z, w);\n    return {...this, value};\n  },\n});\n","export * from './core';\nexport * from './object';\nexport * from './core';\nexport * from './math';\nexport * from './util';\n\n// demo\n\nimport { camerafn } from './core/camera';\nimport { scenefn } from './core/scene';\nimport { planefn } from './object/plane';\nimport { posfrom } from './math/position';\nimport { noop } from './util';\nimport { framefn, rendererfn } from './core/renderer';\n\n(async () => {\n  \"use strict\";\n\n  const camera = camerafn({})\n    .map(posfrom(0, 0, -8))\n    .fold(noop);\n\n  const scene = scenefn();\n    \n  const plane = planefn({width: 2, height: 2});\n  scene.add(plane);\n  \n  const renderer = rendererfn({width: 500, height: 500})\n    .map(framefn(scene, camera, () => {}))\n    .fold(noop);\n\n  document.body.appendChild(renderer.canvas);\n  await renderer.start();\n})();\n"],"names":["identity","set","mat4.create","mat4.identity","mat4.invert","mat4.lookAt","mat4.rotate","mat4.rotateX","mat4.rotateY","mat4.scale","mat4.set","mat4.ortho","mat4.perspective","mat4.translate","Box","fromValues","vec3.fromValues","vec3.set","vec2.fromValues","vec2.set","vec4.fromValues","vec4.set"],"mappings":"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,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACtB,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC1B,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC1B,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC1B,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtB;EACA;EACA,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC7C,EAAE,GAAG,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"}